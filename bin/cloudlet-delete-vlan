#!/bin/bash

if [ "$(id -u)" != "0" ]; then
    echo "This script must be run as root, and requires the following packages:"
    echo "    bridge-utils vlan dnsmasq openvpn"
    exit 2
fi

if [ $# -lt 1 ]; then
    echo "Usage: $0 <vid> [vid...]"
    echo
    echo "Deletes the specified cloudlet VLAN(s)."
    exit 1
fi

VIDS="$@"

# Ensure we're in the directory containing all the helper scripts.
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

LISTEN_IP=${LISTEN_IP:-$(./cloudlet-net--get-default-source-ip)}
CLOUDLET_VPN_PORT_OFFSET=${CLOUDLET_VPN_PORT_OFFSET:-2000}
STATE_DIR=/var/lib/cloudlet

for VID in $VIDS; do
    echo "Stopping dnsmasq on VLAN $VID"
    ./cloudlet-net--stop-dnsmasq $VID
    echo "Stopping openvpn on VLAN $VID"
    VPN_PIDFILE=$STATE_DIR/vpn/tenant$VID.pid
    kill $(cat $VPN_PIDFILE)
done

for VID in $VIDS; do
    TENANT=tenant$VID
    TENANT_IFNAME=tenant$VID
    VETH_IFNAME=veth$VID
    NETNS_RUN="ip netns exec $TENANT"
    VPN_PORT=$(($CLOUDLET_VPN_PORT_OFFSET+$VID))
    ip netns delete $TENANT
    ip link delete $TENANT_IFNAME
    ip link delete br-vlan$VID
    ip link delete vlan$VID
    iptables --table nat --delete POSTROUTING --source 100.65.$VID.2 -j MASQUERADE
    iptables -t nat --delete PREROUTING -p udp -d $LISTEN_IP --dport $VPN_PORT -j DNAT --to-destination 100.65.$VID.2:$VPN_PORT
    iptables --delete FORWARD -p udp -d $LISTEN_IP --dport $VPN_PORT -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT

    echo "Deleted VLAN $VID."
done
